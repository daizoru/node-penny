// Generated by CoffeeScript 1.4.0
(function() {
  var Amount, EUR, USD, currencies, currency, currencyName,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  currencies = {};

  currencies.USD = USD = {
    code: 'USD',
    name: 'U.S. Dollar',
    symbol: '$',
    prefix: true
  };

  currencies.EUR = EUR = {
    code: 'EUR',
    name: 'Euro',
    symbol: 'â‚¬',
    prefix: false
  };

  Amount = (function() {

    function Amount(value, currency) {
      this.value = value;
      this.currency = currency != null ? currency : USD;
      this.toString = __bind(this.toString, this);

      this.isZero = __bind(this.isZero, this);

      this.isPositive = __bind(this.isPositive, this);

      this.isNegative = __bind(this.isNegative, this);

      this.sameCurrency = __bind(this.sameCurrency, this);

      this.mult = __bind(this.mult, this);

      this.mul = __bind(this.mul, this);

      this.multiply = __bind(this.multiply, this);

      this.sub = __bind(this.sub, this);

      this.substract = __bind(this.substract, this);

      this.add = __bind(this.add, this);

      this.to = __bind(this.to, this);

    }

    Amount.prototype.to = function(currency) {
      if (!(currency in currencies)) {
        throw "unknow " + currency;
      }
      if (this.currency.code === currency) {
        return this.value;
      } else {
        0;

        throw "automatic currency conversion is not implemented yet";
      }
    };

    Amount.prototype.add = function(amount) {
      this.value = this.value + amount.to(this.currency.code);
      return this;
    };

    Amount.prototype.substract = function(amount) {
      this.value = this.value - amount.to(this.currency.code);
      return this;
    };

    Amount.prototype.sub = function(amount) {
      return this.substract(amount);
    };

    Amount.prototype.multiply = function(amount) {
      this.value = this.value * amount.to(this.currency.code);
      return this;
    };

    Amount.prototype.mul = function(amount) {
      return this.multiply(amount);
    };

    Amount.prototype.mult = function(amount) {
      return this.multiply(amount);
    };

    Amount.prototype.sameCurrency = function(other) {
      return this.currency.code === other.code;
    };

    Amount.prototype.isNegative = function() {
      return this.value < 0;
    };

    Amount.prototype.isPositive = function() {
      return this.value > 0;
    };

    Amount.prototype.isZero = function() {
      return this.value === 0;
    };

    Amount.prototype.toString = function() {
      if (this.currency.prefix) {
        return "" + this.currency.symbol + this.value;
      } else {
        return "" + this.value + this.currency.symbol;
      }
    };

    return Amount;

  })();

  for (currencyName in currencies) {
    currency = currencies[currencyName];
    Object.defineProperty(Number.prototype, currencyName.toUpperCase(), {
      enumerable: false,
      configurable: false,
      get: function() {
        return new Amount(0 + this, currency);
      }
    });
    Object.defineProperty(Number.prototype, currencyName.toLowerCase(), {
      enumerable: false,
      configurable: false,
      get: function() {
        return new Amount(0 + this, currency);
      }
    });
  }

}).call(this);
